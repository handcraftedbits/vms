---
- name: (main) collect variable [user ID]
  shell: id -u {{ username }}
  register: var_user_id

- name: (main) collect variable [group ID]
  shell: id -g {{ username }}
  register: var_group_id

- name: (main) create Docker directory
  file:
    group: "{{ username }}"
    owner: "{{ username }}"
    path: /opt/vm/{{ hostname }}
    state: directory

- name: (main) create Docker environment file
  copy:
    content: |
      SAMBA_GROUP_ID={{ var_group_id.stdout }}
      SAMBA_PASSWORD={{ ansible_become_pass }}
      SAMBA_USER_ID={{ var_user_id.stdout }}
      SAMBA_USERNAME={{ username }}
    dest: /opt/vm/{{ hostname }}/.env
    group: "{{ username }}"
    mode: "0600"
    owner: "{{ username }}"

- name: (main) add apt repository
  apt_repository:
    repo: "{{ item }}"
    state: present
  with_items:
    - ppa:nikratio/s3ql

- name: (main) install packages
  apt:
    name: "{{ item }}"
    state: present
    update_cache: yes
  with_items:
    - s3ql

- name: (main) create s3ql authentication info file
  copy:
    content: |
      [s3]
      storage-url: s3://hcb-shared
      backend-login: {{ aws_access_key_id }}
      backend-password: {{ aws_access_key }}
      fs-passphrase: {{ ansible_become_pass }}
    dest: /etc/s3ql.authinfo
    mode: "0600"

- name: (main) create S3 filesystem mount point
  file:
    group: "{{ username }}"
    owner: "{{ username }}"
    path: /mnt/hcb-shared
    recurse: yes
    state: directory

- name: (main) create s3ql systemd service
  copy:
    content: |
      [Unit]
      Description=Mount S3 filesystem
      Wants=network-online.target
      [Service]
      ExecStart=/usr/bin/mount.s3ql --fg --authfile /etc/s3ql.authinfo --allow-other --cachedir /var/cache/s3ql s3://hcb-shared /mnt/hcb-shared
      ExecStop=/usr/bin/umount.s3ql /mnt/hcb-shared
      [Install]
      WantedBy=multi-user.target
    dest: /etc/systemd/system/s3ql.service

- name: (main) enable systemd service
  service:
    enabled: yes
    name: s3ql