---
- name: configure iptables-persistent package
  debconf:
    name: iptables-persistent
    question: "{{ item }}"
    value: "true"
    vtype: boolean
  when: no_iptables is not defined
  with_items:
    - iptables-persistent/autosave_v4
    - iptables-persistent/autosave_v6

- name: install packages
  apt:
    name: "{{ item }}"
    state: present
    update_cache: yes
  register: iptables0
  when: no_iptables is not defined
  with_items:
    - iptables-persistent

- name: iptables/accept loopback traffic
  iptables:
    chain: INPUT
    in_interface: lo
    jump: ACCEPT
  register: iptables1
  when: no_iptables is not defined

- name: iptables/accept established connections
  iptables:
    chain: INPUT
    ctstate: ESTABLISHED,RELATED
    jump: ACCEPT
  register: iptables2
  when: no_iptables is not defined

- name: iptables/allow inbound SSH
  iptables:
    chain: INPUT
    destination_port: "{{ ssh_port }}"
    jump: ACCEPT
    protocol: tcp
  register: iptables3
  when: no_iptables is not defined

- name: iptables/allow inbound traffic on custom ports
  iptables:
    chain: INPUT
    destination_port: "{{ item }}"
    jump: ACCEPT
    protocol: tcp
  register: iptables4
  when: no_iptables is not defined and {{ custom_ports|default('') != '' }}
  with_items: "{{ custom_ports.split(',') }}"

- name: iptables/drop all other traffic
  iptables:
    chain: INPUT
    jump: DROP
  register: iptables5
  when: no_iptables is not defined

- name: iptables/save rules
  shell: iptables-save > /etc/iptables/{{ item }}
  with_items:
    - rules.v4
    - rules.v6
  when: no_iptables is not defined and (iptables0.changed or iptables1.changed or iptables2.changed or iptables3.changed or iptables4.changed or iptables5.changed)

- name: add authorized keys
  authorized_key:
    exclusive: yes
    key: "{{ publickey }}"
    user: "{{ username }}"

- name: update sshd configuration
  lineinfile:
    dest: /etc/ssh/sshd_config
    line: "{{ item.line }}"
    regexp: "{{ item.regexp }}"
    state: present
  with_items:
    - { regexp: "^Port", line: "Port {{ ssh_port }}" }
    - { regexp: "^PasswordAuthentication", line: "PasswordAuthentication no" }
    - { regexp: "^PermitRootLogin", line: "PermitRootLogin no" }
